% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/objects.R
\name{FilterCCI}
\alias{FilterCCI}
\alias{FilterCCI.scDiffCom}
\alias{FilterCCI.scDiffComCombined}
\title{Perform filtering and over-representation analysis}
\usage{
FilterCCI(object, ...)

\method{FilterCCI}{scDiffCom}(
  object,
  new_threshold_quantile_score = NULL,
  new_threshold_p_value_specificity = NULL,
  new_threshold_p_value_de = NULL,
  new_threshold_logfc = NULL,
  skip_ora = FALSE,
  verbose = TRUE,
  ...
)

\method{FilterCCI}{scDiffComCombined}(
  object,
  new_threshold_quantile_score = NULL,
  new_threshold_p_value_specificity = NULL,
  new_threshold_p_value_de = NULL,
  new_threshold_logfc = NULL,
  skip_ora = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{object}{An object}

\item{...}{Arguments passed to other methods}

\item{new_threshold_quantile_score}{xxx}

\item{new_threshold_p_value_specificity}{xxx}

\item{new_threshold_p_value_de}{xxx}

\item{new_threshold_logfc}{xxx}

\item{skip_ora}{xxx}

\item{verbose}{Should messages be printed?}
}
\value{
An object with updated \code{cci_detected} and \code{ora_default}
}
\description{
This function is called internally by \code{run_interaction_analysis} after the permutation tests
 have been performed. Based on the threshold parameters, it returns detected and differentially expressed
 CCIs in the slot \code{cci_detected} and results of over-representation analysis in \code{cci_ora_default}.
 The function can be run with new threshold parameters on any scDiffCom object that already contain the slot
 \code{cci_raw}. This allows the user to test various filtering parameters without the need to rerun the
 potentially time-consuming permutation analysis. When new thresholds are defined the slot \code{parameters} is
 modified accordingly.
 Filtering and over-representation are not independent as the second depends on the first. Therefore, when
 running filtering with new parameters, we also need to update the ORA results.
}
